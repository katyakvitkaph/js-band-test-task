{"version":3,"sources":["webpack:///./js/services/index.js","webpack:///./js/model.js","webpack:///./js/services/event-emitter.js","webpack:///./js/classes/User.js","webpack:///./js/classes/Admin.js","webpack:///./js/constants/collectionTypes.js","webpack:///./js/view.js","webpack:///./js/controller.js","webpack:///./index.js"],"names":["ServiceAPI","this","server","axios","initUser","params","post","result","Error","getAllUsers","get","addEvent","getAllEvents","data","deleteEvent","id","delete","service","Model","items","selectedItemId","filteredItems","filterItems","formState","Object","values","every","el","nameOfMemberValue","filter","item","name","join","getEvents","callback","then","map","obj","JSON","parse","forEach","push","findItem","find","setSelectedItemId","getSelectedItemId","addItem","title","dayOfWeek","time","shortid","row","indexOf","col","some","alert","deleteItem","idObj","getArrayOfStrings","includes","getObj","EventEmitter","events","on","type","emit","args","User","_name","newName","Admin","role","_role","collectionTypes","HELGA","PABLO","KATE","ALEX","View","container","document","querySelector","authModal","confirmUser","form","main","modal","selectNameMember","createModalForm","addNoteBtn","signoutBtn","header","cancelCreateBtn","$","ready","multiselect","includeSelectAllOption","table","addEventListener","toggleDropdown","signOut","bind","onSelectNameMemberChange","openCreateModal","handleAdd","closeCreateModal","handleAuth","e","target","value","preventDefault","selected","Array","from","options","option","note","length","slice","reset","createDOMElement","tag","dataAttribute","text","element","createElement","dataset","textContent","classes","className","classList","add","createGreetings","createNote","section","itemTitle","buttonsContainer","buttonDelete","append","appendEventListners","handleDelete","parent","closest","stopPropagation","deleteNote","remove","closeAuthModal","inst","selectedUser","selectedUserName","toLowerCase","querySelectorAll","style","display","localStorage","setItem","removeItem","location","reload","init","notes","isAdmin","getItem","cell","cellsData","getElementsByTagName","i","innerHTML","rows","cells","nothingsFound","Controller","model","view","addNote","handleFilter","handleCreateCancel","console","log","showAllNotes","stringify","error"],"mappings":"+oBACA,IAGqBA,E,WACnB,aACEC,KAAKC,OALO,sDAMZD,KAAKE,MAAQA,I,2BAGTC,S,4CAAN,WAAeC,GAAf,+GAEuBJ,KAAKE,MAAMG,KAAQL,KAAKC,OAAxB,SAAwCG,GAF/D,cAEQE,EAFR,yBAGWA,GAHX,sCAKU,IAAIC,MAAJ,MALV,yD,wDAQMC,Y,4CAAN,4HAEuBR,KAAKE,MAAMO,IAAOT,KAAKC,OAAvB,UAFvB,cAEQK,EAFR,yBAGWA,GAHX,sCAKU,IAAIC,MAAJ,MALV,yD,uDASMG,S,4CAAN,WAAeN,GAAf,+GAEuBJ,KAAKE,MAAMG,KAAQL,KAAKC,OAAxB,UAAyCG,GAFhE,cAEQE,EAFR,yBAIWA,GAJX,sCAMU,IAAIC,MAAJ,MANV,yD,wDASMI,a,4CAAN,4HAEuBX,KAAKE,MAAMO,IAAOT,KAAKC,OAAvB,WAFvB,cAEQK,EAFR,yBAIWA,EAAOM,MAJlB,sCAMU,IAAIL,MAAJ,MANV,yD,uDASMM,Y,4CAAN,WAAkBC,GAAlB,+GAEuBd,KAAKE,MAAMa,OAAUf,KAAKC,OAA1B,WAA2Ca,GAFlE,cAEQR,EAFR,yBAGWA,GAHX,sCAKU,IAAIC,MAAJ,MALV,yD,oLC1CF,IAAMS,EAAU,IAAIjB,EACCkB,E,WACnB,WAAYC,QAAY,IAAZA,MAAQ,IAClBlB,KAAKkB,MAAQA,EACblB,KAAKmB,eAAiB,KACtBnB,KAAKoB,cAAgB,G,2BAGvBC,YAAA,SAAYC,GACWC,OAAOC,OAAOF,GAAWG,OAAM,SAAAC,GAAE,MAAW,KAAPA,OAExD1B,KAAKoB,cAAgBpB,KAAKkB,OAGM,KAAhCI,EAAUK,mBACsB,gBAAhCL,EAAUK,oBAEV3B,KAAKoB,cAAgBpB,KAAKoB,cAAcQ,QAAO,SAAAC,GAAI,OACjDA,EAAKC,KAAKF,QAAO,SAAAF,GAAE,OAAIA,IAAOJ,EAAUK,qBAAmBI,KAAK,S,EAKhEC,U,+CAAN,WAAgBC,GAAhB,2GACQjB,EAAQL,eAAeuB,MAAK,SAAA5B,GAMhC,OAJAA,GACeA,EACV6B,KAAI,SAAAC,GAAG,OAAIC,KAAKC,MAAMF,EAAIxB,SAC1B2B,SAAQ,SAAAb,GAAE,OAAI,EAAKR,MAAMsB,KAAKd,MAC5B,EAAKR,SAPhB,OASEe,IATF,0C,uOAYAQ,SAAA,SAAS3B,GACP,OAAOd,KAAKkB,MAAMwB,MAAK,SAAAb,GAAI,OAAIA,EAAKf,KAAOA,M,EAG7C6B,kBAAA,SAAkB7B,GAChBd,KAAKmB,eAAiBL,G,EAGxB8B,kBAAA,WACE,OAAO5C,KAAKmB,gB,EAGd0B,QAAA,YAA0C,IAAhCC,EAAgC,EAAhCA,MAAOhB,EAAyB,EAAzBA,KAAMiB,EAAmB,EAAnBA,UAAWC,EAAQ,EAARA,KAc1BnB,EAAO,CACXf,GAAImC,MACJH,QACAhB,OACAkB,OACAD,YACAG,IAnBgB,CAChB,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAUeC,QAAQH,GACvBI,IATiB,CAAC,SAAU,UAAW,YAAa,WAAY,UAShDD,QAAQJ,IAGP,OAAf/C,KAAKkB,QACWlB,KAAKkB,MAAMmC,MAC3B,SAAA3B,GAAE,OAAIA,EAAGqB,YAAclB,EAAKkB,WAAarB,EAAGsB,OAASnB,EAAKmB,QAIxDM,MAAM,0DADNtD,KAAKkB,MAAMsB,KAAKX,IAItB,OAAOA,G,EAGT0B,WAAA,SAAWzC,GACT,IAAI0C,EACJxC,EAAQL,eAAeuB,MAAK,SAAA5B,GAC1B,IAAImD,EAAoBnD,EACrB6B,KAAI,SAAAT,GAAE,OAAIA,EAAGd,QACb8B,MAAK,SAAAhB,GAAE,OAAIA,EAAGgC,SAAS5C,MACtB6C,EAASrD,EACVsB,QAAO,SAAAF,GAAE,OAAIA,EAAGd,OAAS6C,KACzBf,MAAK,SAAAhB,GAAE,OAAIA,EAAGZ,MACjB0C,EAAQG,EAAO7C,GACfE,EAAQH,YAAY2C,GAAOtB,MAAK,SAAA5B,UAKlCN,KAAKkB,MAAQlB,KAAKkB,MAAMU,QAAO,SAAAC,GAAI,OAAIA,EAAKf,KAAOA,M,KCrGlC8C,G,yCACnB,aACE5D,KAAK6D,OAAS,G,2BAGhBC,GAAA,SAAGC,EAAM9B,GACPjC,KAAK6D,OAAOE,GAAQ/D,KAAK6D,OAAOE,IAAS,GACzC/D,KAAK6D,OAAOE,GAAMvB,KAAKP,I,EAEzB+B,KAAA,SAAKD,GAAe,2BAANE,EAAM,iCAANA,EAAM,kBACdjE,KAAK6D,OAAOE,IACd/D,KAAK6D,OAAOE,GAAMxB,SAAQ,SAAAN,GAAQ,OAAIA,EAAQ,WAAR,EAAYgC,O,gLCXnCC,E,WACjB,WAAYpC,GACR9B,KAAK8B,KAAOA,E,oDAIZ,OAAO9B,KAAKmE,O,aAGPC,GACL,OAAOpE,KAAKmE,MAAQC,O,oCCRPC,E,oBACjB,WAAYvC,EAAKwC,GAAM,aACnB,cAAMxC,IAAN,MACKyC,MAAQD,EAFM,E,iGADQJ,GCKlBM,EAPO,CACpBC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,Q,2HCGV,IAAM5D,EAAU,IAAIjB,EACC8E,E,oBACnB,aAAc,aACZ,sBACKvD,UAAY,CACfK,kBAAmB,IAErB,EAAKb,GAAKmC,MACV,EAAK6B,UAAYC,SAASC,cAAc,cACxC,EAAKC,UAAYF,SAASC,cAAc,sBACxC,EAAKE,YAAcH,SAASC,cAAc,iCAC1C,EAAKG,KAAOJ,SAASC,cAAc,SACnC,EAAKI,KAAOL,SAASC,cAAc,iBACnC,EAAKK,MAAQN,SAASC,cAAc,iBACpC,EAAKM,iBAAmB,EAAKH,KAAKH,cAAc,iBAChD,EAAKO,gBAAkB,EAAKF,MAAML,cAAc,eAChD,EAAKQ,WAAaT,SAASC,cAAc,kCACzC,EAAKS,WAAaV,SAASC,cAAc,iCACzC,EAAKU,OAASX,SAASC,cAAc,qBAErC,EAAKW,gBAAkBZ,SAASC,cAC9B,uCAGFY,EAAEb,UAAUc,OAAM,WAChBD,EAAE,wBAAwBE,YAAY,CACpCC,wBAAwB,OAI5B,EAAKC,MAAQjB,SAASC,cAAc,SACpC,EAAKF,UAAUmB,iBAAiB,QAAS,EAAKC,gBAC9C,EAAKT,WAAWQ,iBAAiB,QAAS,EAAKE,QAAQC,KAAb,OAC1C,EAAKd,iBAAiBW,iBACpB,SACA,EAAKI,yBAAyBD,KAA9B,OAEF,EAAKZ,WAAWS,iBAAiB,QAAS,EAAKK,gBAAgBF,KAArB,OAC1C,EAAKb,gBAAgBU,iBAAiB,SAAU,EAAKM,UAAUH,KAAf,OAChD,EAAKT,gBAAgBM,iBACnB,QACA,EAAKO,iBAAiBJ,KAAtB,OAEF,EAAKlB,YAAYe,iBAAiB,QAAS,EAAKQ,WAAWL,KAAhB,OAzC/B,E,kHA6CdC,yBAAA,SAAyBK,GACvB1G,KAAKsB,UAAUK,kBAAoB+E,EAAEC,OAAOC,MAC5C5G,KAAKgE,KAAK,SAAUhE,KAAKsB,Y,EAG3BiF,UAAA,SAAUG,GACRA,EAAEG,iBACF,IAAM/D,EAAQ9C,KAAKqF,MAAML,cAAc,sBACjCjC,EAAY/C,KAAKqF,MAAML,cAAc,2BACrChC,EAAOhD,KAAKqF,MAAML,cAAc,4BAChClD,EAAO9B,KAAKqF,MAAML,cAAc,wBAElC8B,EAAWC,MAAMC,KAAKlF,EAAKmF,SAC5BrF,QAAO,SAAUE,GAChB,OAAOA,EAAKgF,YAEb3E,KAAI,SAAU+E,GACb,OAAOA,EAAON,SAGlB,GAAK9D,EAAM8D,MAEJ,CACL,IAAMO,EAAO,CACXrE,MAAOA,EAAM8D,MAAMQ,OAAS,GAC1BtE,EAAM8D,MAAMS,MAAM,EAAG,IAAM,MAAQvE,EAAM8D,MAC3C7D,UAAWA,EAAU6D,MACrB5D,KAAMA,EAAK4D,MACX9E,KAAMgF,GAGR9G,KAAKgE,KAAK,MAAOmD,GACjBnH,KAAKuF,gBAAgB+B,QACrBtH,KAAKwG,wBAZLlD,MAAM,4B,EAeViE,iBAAA,SAAiBC,EAAKC,EAAeC,GACnC,IAAMC,EAAU5C,SAAS6C,cAAcJ,GACvCC,IAEGE,EAAQE,QAAQJ,EAAc,IAAMA,EAAc,IAErDC,IAAQC,EAAQG,YAAcJ,GANuB,2BAATK,EAAS,iCAATA,EAAS,kBAQrD,OADAA,EAAQxF,SAAQ,SAAAyF,GAAS,OAAIL,EAAQM,UAAUC,IAAIF,MAC5CL,G,EAGTQ,gBAAA,SAAgBrG,GAGd,OAFc9B,KAAKuH,iBAAiB,KAAM,KAAMzF,EAAM,c,EAIxDsG,WAAA,SAAWjB,GACT,IAAMkB,EAAUrI,KAAKuH,iBACnB,UACA,KACA,KACA,uBAEI1F,EAAO7B,KAAKuH,iBAAiB,MAAO,CAAC,KAAMJ,EAAKrG,IAAK,KAAM,QAE3DwH,EAAYtI,KAAKuH,iBACrB,KACA,KACAJ,EAAKrE,MACL,eAGIyF,EAAmBvI,KAAKuH,iBAC5B,MACA,KACA,KACA,qBAGIiB,EAAexI,KAAKuH,iBACxB,SACA,CAAC,SAAU,UACX,GACA,iBASF,OANAgB,EAAiBE,OAAOD,GAExB3G,EAAK4G,OAAOH,EAAWC,GACvBF,EAAQI,OAAO5G,GACf7B,KAAK0I,oBAAoBL,GAElBA,G,EAGTK,oBAAA,SAAoB7G,GACAA,EAAKmD,cAAc,gCAC3BiB,iBAAiB,QAASjG,KAAK2I,aAAavC,KAAKpG,Q,EAG7D2I,aAAA,SAAajC,GACX,IAAMkC,EAASlC,EAAEC,OAAOkC,QAAQ,SAChCnC,EAAEoC,kBACF9I,KAAKgE,KAAK,SAAU4E,EAAOf,QAAQ/G,K,EAGrCiI,WAAA,SAAWjI,GACId,KAAKgG,MAAMhB,cAAX,aAAsClE,EAAtC,MACR+H,QAAQ,WAAWG,U,EAG1B1C,gBAAA,WACEtG,KAAK8E,UAAUmD,UAAUC,IAAI,gB,EAG/B1B,iBAAA,WACExG,KAAK8E,UAAUmD,UAAUe,OAAO,gB,EAElCC,eAAA,WACEjJ,KAAK8E,UAAUmD,UAAUe,OAAO,sB,EAElCvC,WAAA,SAAWC,GAAG,IAERwC,EAFQ,OACZxC,EAAEG,iBAGF,IAAMsC,EAAenJ,KAAKiF,UAAUD,cAClC,4BAGEoE,EAAmBD,EAAavC,MAAMyC,cACpCnI,EAAQlB,KAAKgG,MAAMsD,iBAAiB,gCAiB1C,OAdAtI,EAAQR,cAAc0B,MAAK,SAAA5B,GAGzB,OAFWA,EAAOM,KAAKyC,MAAK,SAAAxB,GAAI,OAAIA,EAAKjB,OAASwI,MAGhDpI,EAAQb,SAAS,CACf,QAAWiJ,EACX,GAAM,EAAKtI,KACVoB,MAAK,SAAA5B,GACN,OAAOA,QAML8I,GACN,KAAK5E,EAAgBI,KACnBsE,EAAO,IAAI7E,EAAM+E,GAAkB,GACnClI,EAAMqB,SAAQ,SAAAV,GACZA,EAAK0H,MAAMC,QAAU,WAEvB,MACF,KAAKhF,EAAgBC,MACrB,KAAKD,EAAgBE,MACrB,KAAKF,EAAgBG,KACnBuE,EAAO,IAAIhF,EAAKkF,GAChBpJ,KAAKwF,WAAW+D,MAAMC,QAAU,OAChCtI,EAAMqB,SAAQ,SAAAV,GACZA,EAAK0H,MAAMC,QAAU,UAGvB,MACF,QACE,OAEJxJ,KAAK0F,OAAO+C,OAAOzI,KAAKmI,gBAAL,UAA+BgB,EAAavC,QAC/D6C,aAAaC,QAAQ,WAAYR,EAAK3E,OACtCvE,KAAKiJ,kB,EAIP9C,QAAA,WACEsD,aAAaE,WAAW,YACxBC,SAASC,U,EAGXC,KAAA,SAAKC,GAAO,IACNC,EADM,OAEVA,EAAUP,aAAaQ,QAAQ,YAG/B,IAFA,IAAIC,EAAO,KACPC,EAAYnK,KAAKgG,MAAMoE,qBAAqB,MACvCC,EAAI,EAAGA,EAAIF,EAAU/C,OAAQiD,IACpCF,EAAUE,GAAGC,UAAY,GAE3BP,EAAMxH,SAAQ,SAAA4E,GAKQ,KAJpB+C,EAAO,EAAKlE,MAAMuE,KAAKpD,EAAKjE,IAAM,GAAGsH,MAAMrD,EAAK/D,IAAM,IAEpCgH,qBAAqB,WAE9BhD,QACP8C,EAAKzB,OAAO,EAAKL,WAAWjB,OAGhC,IAAMjG,EAAQlB,KAAKgG,MAAMsD,iBAAiB,gCAC9B,SAAZU,GACE9I,EAAMqB,SAAQ,SAAAV,GACZA,EAAK0H,MAAMC,QAAU,W,EAK3BiB,cAAA,WAEE,IADA,IAAIN,EAAYnK,KAAKgG,MAAMoE,qBAAqB,MACvCC,EAAI,EAAGA,EAAIF,EAAU/C,OAAQiD,IACpCF,EAAUE,GAAGC,UAAY,I,GAxPG1G,GCN5B5C,EAAU,IAAIjB,EACC2K,E,WACnB,WAAYC,EAAOC,GAAM,WACvB5K,KAAK2K,MAAQA,EACb3K,KAAK4K,KAAOA,EACZ5K,KAAK4K,KAAK9G,GAAG,MAAO9D,KAAK6K,QAAQzE,KAAKpG,OACtCA,KAAK4K,KAAK9G,GAAG,SAAU9D,KAAK+I,WAAW3C,KAAKpG,OAC5CA,KAAK4K,KAAK9G,GAAG,SAAU9D,KAAK8K,aAAa1E,KAAKpG,OAC9CA,KAAK4K,KAAK9G,GAAG,gBAAiB9D,KAAK+K,mBAAmB3E,KAAKpG,OAC3DA,KAAK2K,MAAM3I,WAAU,kBAAM,EAAK4I,KAAKd,KAAK,EAAKa,MAAMzJ,U,2BAGvD4J,aAAA,SAAaxJ,GACXtB,KAAK2K,MAAMtJ,YAAYC,GACvB0J,QAAQC,IAAI,2BAA4BjL,KAAK2K,MAAMvJ,eACnDpB,KAAK2K,MAAMvJ,cAAcgG,OACvBpH,KAAK4K,KAAKd,KAAK9J,KAAK2K,MAAMvJ,eAC1BpB,KAAK4K,KAAKH,gBAEZzK,KAAK2K,MAAMvJ,cAAgBpB,KAAK2K,MAAMzJ,O,EAGxCgK,aAAA,WACElL,KAAK4K,KAAKd,KAAK9J,KAAK2K,MAAMzJ,Q,EAI5B6J,mBAAA,WACE/K,KAAK4K,KAAKpE,oB,EAGZqE,QAAA,SAAQ1D,GACN,IACEnG,EAAQN,SAAS,CACf,KAAQ2B,KAAK8I,UAAUnL,KAAK2K,MAAM9H,QAAQsE,MACzCjF,MAAK,SAAA5B,GACN,OAAOA,EAAOM,QAEhB,MAAO8F,GACPsE,QAAQI,MAAM,wBAEhBpL,KAAKkL,gB,EAGPnC,WAAA,SAAWjI,GACTd,KAAK2K,MAAMpH,WAAWzC,GACtBd,KAAK4K,KAAK7B,WAAWjI,I,KC3CnB8J,EAAO,IAAI/F,EAGjB,IAAI6F,EAFU,IAAIzJ,EAEI2J,K","file":"main.44233b26b088ff53639f.js","sourcesContent":["import axios from 'axios';\nconst baseURL = 'http://158.101.166.74:8080/api/data/kate_kiriukhina';\n\n\nexport default class ServiceAPI {\n  constructor() {\n    this.server = baseURL;\n    this.axios = axios;\n  }\n\n  async initUser(params) {\n    try {\n      let result = await this.axios.post(`${this.server}/users`, params);\n      return result;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  async getAllUsers() {\n    try {\n      let result = await this.axios.get(`${this.server}/users`);\n      return result;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async addEvent(params) {\n    try {\n      let result = await this.axios.post(`${this.server}/events`, params);\n\n      return result;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  async getAllEvents() {\n    try {\n      let result = await this.axios.get(`${this.server}/events`);\n\n      return result.data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  async deleteEvent(id) {\n    try {\n      let result = await this.axios.delete(`${this.server}/events/${id}`);\n      return result;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}","import shortid from 'shortid';\nimport ServiceAPI from './services/index';\n\nconst service = new ServiceAPI();\nexport default class Model {\n  constructor(items = []) {\n    this.items = items;\n    this.selectedItemId = null;\n    this.filteredItems = [];\n  }\n\n  filterItems(formState) {\n    const isEmptyState = Object.values(formState).every(el => el === '');\n    if (isEmptyState) {\n      this.filteredItems = this.items;\n    }\n    if (\n      formState.nameOfMemberValue !== '' &&\n      formState.nameOfMemberValue !== 'All members'\n    ) {\n      this.filteredItems = this.filteredItems.filter(item =>\n        item.name.filter(el => el === formState.nameOfMemberValue).join(''),\n      );\n    }\n  }\n\n  async getEvents(callback) {\n    await service.getAllEvents().then(result => {\n      let getObject;\n      result &&\n        (getObject = result\n          .map(obj => JSON.parse(obj.data))\n          .forEach(el => this.items.push(el)));\n      return this.items;\n    });\n    callback();\n  }\n\n  findItem(id) {\n    return this.items.find(item => item.id === id);\n  }\n\n  setSelectedItemId(id) {\n    this.selectedItemId = id;\n  }\n\n  getSelectedItemId() {\n    return this.selectedItemId;\n  }\n\n  addItem({ title, name, dayOfWeek, time }) {\n    const timeOfDay = [\n      '10:00',\n      '11:00',\n      '12:00',\n      '13:00',\n      '14:00',\n      '15:00',\n      '16:00',\n      '17:00',\n      '18:00',\n    ];\n    const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n\n    const item = {\n      id: shortid(),\n      title,\n      name,\n      time,\n      dayOfWeek,\n      row: timeOfDay.indexOf(time),\n      col: daysOfWeek.indexOf(dayOfWeek),\n    };\n\n    if (this.items !== null) {\n      const checkTime = this.items.some(\n        el => el.dayOfWeek === item.dayOfWeek && el.time === item.time,\n      );\n      !checkTime\n        ? this.items.push(item)\n        : alert('Failed to create an event! Time slot is already booked');\n    }\n\n    return item;\n  }\n\n  deleteItem(id) {\n    let idObj;\n    service.getAllEvents().then(result => {\n      let getArrayOfStrings = result\n        .map(el => el.data)\n        .find(el => el.includes(id));\n      let getObj = result\n        .filter(el => el.data === getArrayOfStrings)\n        .find(el => el.id);\n      idObj = getObj.id;\n      service.deleteEvent(idObj).then(result => {\n        return;\n      });\n      return;\n    });\n    this.items = this.items.filter(item => item.id !== id);\n  }\n}\n","export default class EventEmitter {\n  constructor() {\n    this.events = {};\n  }\n\n  on(type, callback) {\n    this.events[type] = this.events[type] || [];\n    this.events[type].push(callback);\n  }\n  emit(type, ...args) {\n    if (this.events[type]) {\n      this.events[type].forEach(callback => callback(...args));\n    }\n  }\n}\n","export default class User {\n    constructor(name) {\n        this.name = name;\n      }\n\n    get name() {\n        return this._name\n    }\n\n    set name(newName) {\n        return this._name = newName\n    }\n  }\n  ","import User from './User';\n\nexport default class Admin extends User {\n    constructor(name,role) {\n        super(name);\n        this._role = role;\n      }\n\n\n}\n","const collectionTypes = {\n    HELGA: 'helga',\n    PABLO: 'pablo',\n    KATE: 'kate',\n    ALEX: 'alex',\n  };\n  \n  export default collectionTypes;\n  ","import EventEmitter from './services/event-emitter';\nimport User from './classes/User';\nimport Admin from './classes/Admin';\nimport collectionTypes from './constants/collectionTypes';\nimport shortid from \"shortid\";\nimport ServiceAPI from './services/index';\n\nconst service = new ServiceAPI();\nexport default class View extends EventEmitter {\n  constructor() {\n    super();\n    this.formState = {\n      nameOfMemberValue: '',\n    };\n    this.id = shortid();\n    this.container = document.querySelector('.container');\n    this.authModal = document.querySelector('.modal-window-auth');\n    this.confirmUser = document.querySelector('button[data-action=\"confirm\"]');\n    this.form = document.querySelector('.form');\n    this.main = document.querySelector('.main-content');\n    this.modal = document.querySelector('.modal-window');\n    this.selectNameMember = this.form.querySelector('.select--name');\n    this.createModalForm = this.modal.querySelector('.modal-form');\n    this.addNoteBtn = document.querySelector('button[data-action=\"add-note\"]');\n    this.signoutBtn = document.querySelector('button[data-action=\"signout\"]');\n    this.header = document.querySelector('.header-container');\n\n    this.cancelCreateBtn = document.querySelector(\n      'button[data-action=\"create-cancel\"]',\n    );\n\n    $(document).ready(function () {\n      $('#multiple-checkboxes').multiselect({\n        includeSelectAllOption: true,\n      });\n    });\n\n    this.table = document.querySelector('table');\n    this.container.addEventListener('click', this.toggleDropdown);\n    this.signoutBtn.addEventListener('click', this.signOut.bind(this));\n    this.selectNameMember.addEventListener(\n      'change',\n      this.onSelectNameMemberChange.bind(this),\n    );\n    this.addNoteBtn.addEventListener('click', this.openCreateModal.bind(this));\n    this.createModalForm.addEventListener('submit', this.handleAdd.bind(this));\n    this.cancelCreateBtn.addEventListener(\n      'click',\n      this.closeCreateModal.bind(this),\n    );\n    this.confirmUser.addEventListener('click', this.handleAuth.bind(this));\n\n  }\n\n  onSelectNameMemberChange(e) {\n    this.formState.nameOfMemberValue = e.target.value;\n    this.emit('filter', this.formState);\n  }\n\n  handleAdd(e) {\n    e.preventDefault();\n    const title = this.modal.querySelector('.modal-form__input');\n    const dayOfWeek = this.modal.querySelector('.modal-form__select-day');\n    const time = this.modal.querySelector('.modal-form__select-time');\n    const name = this.modal.querySelector('#multiple-checkboxes');\n\n    let selected = Array.from(name.options)\n      .filter(function (name) {\n        return name.selected;\n      })\n      .map(function (option) {\n        return option.value;\n      });\n\n    if (!title.value) {\n      alert('Please, fill the field!');\n    } else {\n      const note = {\n        title: title.value.length > 15 ?\n          title.value.slice(0, 16) + '...' : title.value,\n        dayOfWeek: dayOfWeek.value,\n        time: time.value,\n        name: selected,\n      };\n\n      this.emit('add', note);\n      this.createModalForm.reset();\n      this.closeCreateModal();\n    }\n  }\n  createDOMElement(tag, dataAttribute, text, ...classes) {\n    const element = document.createElement(tag);\n    dataAttribute\n      ?\n      (element.dataset[dataAttribute[0]] = dataAttribute[1]) :\n      null;\n    text ? (element.textContent = text) : null;\n    classes.forEach(className => element.classList.add(className));\n    return element;\n  }\n\n  createGreetings(name) {\n    const title = this.createDOMElement('h2', null, name, 'name-user');\n\n    return title;\n  }\n  createNote(note) {\n    const section = this.createDOMElement(\n      'section',\n      null,\n      null,\n      'event-list__section',\n    );\n    const item = this.createDOMElement('div', ['id', note.id], null, 'item');\n\n    const itemTitle = this.createDOMElement(\n      'h2',\n      null,\n      note.title,\n      'item__title',\n    );\n\n    const buttonsContainer = this.createDOMElement(\n      'div',\n      null,\n      null,\n      'buttons-container',\n    );\n\n    const buttonDelete = this.createDOMElement(\n      'button',\n      ['action', 'delete'],\n      '',\n      'button-delete',\n    );\n\n    buttonsContainer.append(buttonDelete);\n\n    item.append(itemTitle, buttonsContainer);\n    section.append(item);\n    this.appendEventListners(section);\n\n    return section;\n  }\n\n  appendEventListners(item) {\n    const deleteBtn = item.querySelector('button[data-action=\"delete\"]');\n    deleteBtn.addEventListener('click', this.handleDelete.bind(this));\n  }\n\n  handleDelete(e) {\n    const parent = e.target.closest('.item');\n    e.stopPropagation();\n    this.emit('delete', parent.dataset.id);\n  }\n\n  deleteNote(id) {\n    const item = this.table.querySelector(`[data-id=\"${id}\"]`);\n    item.closest('section').remove();\n  }\n\n  openCreateModal() {\n    this.container.classList.add('modal--show');\n  }\n\n  closeCreateModal() {\n    this.container.classList.remove('modal--show');\n  }\n  closeAuthModal() {\n    this.container.classList.remove('modal--auth--show');\n  }\n  handleAuth(e) {\n    e.preventDefault();\n    let inst;\n\n    const selectedUser = this.authModal.querySelector(\n      '.modal-form__select-name',\n    );\n\n    let selectedUserName = selectedUser.value.toLowerCase();\n    const items = this.table.querySelectorAll('button[data-action=\"delete\"]');\n\n    let findUser;\n    service.getAllUsers().then(result => {\n      findUser = result.data.some(item => item.data === selectedUserName)\n\n      return !findUser &&\n        service.initUser({\n          \"data\": `${selectedUserName}`,\n          \"id\": this.id\n        }).then(result => {\n          return result\n        });\n\n\n    });\n\n    switch (selectedUserName) {\n      case collectionTypes.ALEX:\n        inst = new Admin(selectedUserName, true);\n        items.forEach(item => {\n          item.style.display = 'block';\n        });\n        break;\n      case collectionTypes.HELGA:\n      case collectionTypes.PABLO:\n      case collectionTypes.KATE:\n        inst = new User(selectedUserName);\n        this.addNoteBtn.style.display = 'none';\n        items.forEach(item => {\n          item.style.display = 'none';\n        });\n\n        break;\n      default:\n        return;\n    }\n    this.header.append(this.createGreetings(`Hello, ${selectedUser.value}`));\n    localStorage.setItem('userRole', inst._role);\n    this.closeAuthModal();\n\n  }\n\n  signOut() {\n    localStorage.removeItem('userRole');\n    location.reload();\n  }\n\n  init(notes) {\n    let isAdmin = true;\n    isAdmin = localStorage.getItem('userRole');\n    let cell = null;\n    let cellsData = this.table.getElementsByTagName('td');\n    for (let i = 0; i < cellsData.length; i++) {\n      cellsData[i].innerHTML = '';\n    }\n    notes.forEach(note => {\n      cell = this.table.rows[note.row + 1].cells[note.col + 1];\n\n      const item = cell.getElementsByTagName('section');\n\n      if (item.length === 0) {\n        cell.append(this.createNote(note));\n      }\n    });\n    const items = this.table.querySelectorAll('button[data-action=\"delete\"]');\n    isAdmin !== 'true' &&\n      items.forEach(item => {\n        item.style.display = 'none';\n      });\n\n  }\n\n  nothingsFound() {\n    let cellsData = this.table.getElementsByTagName('td');\n    for (let i = 0; i < cellsData.length; i++) {\n      cellsData[i].innerHTML = '';\n    }\n  }\n}\n","import ServiceAPI from './services/index';\n\nconst service = new ServiceAPI();\nexport default class Controller {\n  constructor(model, view) {\n    this.model = model;\n    this.view = view;\n    this.view.on(\"add\", this.addNote.bind(this));\n    this.view.on(\"delete\", this.deleteNote.bind(this));\n    this.view.on(\"filter\", this.handleFilter.bind(this));\n    this.view.on(\"create-cancel\", this.handleCreateCancel.bind(this));\n    this.model.getEvents(() => this.view.init(this.model.items))\n\n  }\n  handleFilter(formState) {\n    this.model.filterItems(formState);\n    console.log('this.model.filteredItems', this.model.filteredItems);\n    this.model.filteredItems.length ?\n      this.view.init(this.model.filteredItems) :\n      this.view.nothingsFound();\n\n    this.model.filteredItems = this.model.items;\n  }\n\n  showAllNotes() {\n    this.view.init(this.model.items);\n  }\n\n\n  handleCreateCancel() {\n    this.view.closeCreateModal();\n  }\n\n  addNote(note) {\n    try {\n      service.addEvent({\n        \"data\": JSON.stringify(this.model.addItem(note))\n      }).then(result => {\n        return result.data\n      });\n    } catch (e) {\n      console.error(\"Error while parsing.\");\n    }\n    this.showAllNotes();\n  }\n\n  deleteNote(id) {\n    this.model.deleteItem(id);\n    this.view.deleteNote(id);\n  }\n}\n","import \"./sass/main.scss\";\nimport Model from \"./js/model\";\nimport View from \"./js/view\";\nimport Controller from \"./js/controller\";\n\nconst view = new View();\nconst model = new Model();\n\nnew Controller(model, view);\n"],"sourceRoot":""}